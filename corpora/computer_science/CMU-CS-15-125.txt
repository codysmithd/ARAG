We explore a new approach to "Web-based Transient Personal Computing" by building upon the ideas from Professor Satyanarayanan's ISR (Internet Suspend/ResumeRÂ®) to create a much leaner iteration of ISR which also leverages more recent work done in virtualization. ISR decouples machine state from hardware by storing the state in a virtual machine. It increases convenience and productivity for users by allowing them to securely access personal machine state on an anonymous machine (e.g., a PC in a waiting room at the doctors office) or more portable devices, like tablets, instead of being bound to particular hardware. Although the existing ISR is functional, its codebase is complex, and some of the decisions made in its development would have been made differently today. We reconsider the original premises of ISR and build a minimal system in the spirit of the original.

Rather than working from the ISR codebase, we build upon the newer VMNetX code-base, which spun off from the ideas of ISR and is the core of the Olive Archive project. VMNetX supports a subset of ISR's functionality. The main distinction is that its VMs are read-only. Therefore, we extend this codebase to support saving user state and transferring it between the client and the server as efficiently as possible. Although we did not introduce any completely novel techniques, we instead focused on producing the most robust and user-friendly implementation of the ISR core concept thus far. The final system prioritizes usability and the user experience. New features such as a GUI and trickle back of dirty state allow users to more easily manipulate their VMs and minimize waiting for operations to complete.
